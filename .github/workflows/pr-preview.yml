# name: PR Preview Deploy

# on:
#   pull_request:
#     types: [opened, synchronize, reopened, closed]

# permissions:
#   contents: read
#   pages: write
#   id-token: write
#   pull-requests: write

# jobs:
#   build-and-preview:
#     if: github.event.action != 'closed'
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '18'

#       - name: Install dependencies
#         run: npm ci

#       - name: Get PR number
#         run: echo "PR_NUMBER=${{ github.event.number }}" >> $GITHUB_ENV

#       - name: Update Vite config for PR preview
#         run: |
#           sed -i "s|base: '/'|base: '/pr-preview/${{ env.PR_NUMBER }}/'|" vite.config.ts

#       - name: Build project
#         run: npm run build

#       - name: Copy static files
#         run: |
#           mkdir -p dist/apps
#           mkdir -p dist/assuta
#           cp -R apps/* dist/apps/
#           cp -R assuta/* dist/assuta/

#       - name: Deploy to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GTOKEN }}
#           publish_dir: ./dist
#           destination_dir: pr-preview/${{ env.PR_NUMBER }}

#       - name: Find Comment
#         uses: peter-evans/find-comment@v2
#         id: fc
#         with:
#           issue-number: ${{ github.event.pull_request.number }}
#           comment-author: 'github-actions[bot]'
#           body-includes: Preview deployed to

#       - name: Comment PR
#         uses: peter-evans/create-or-update-comment@v3
#         with:
#           issue-number: ${{ github.event.pull_request.number }}
#           body: |
#             Preview deployed to: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-preview/${{ env.PR_NUMBER }}/
            
#             ${{ steps.fc.outputs.comment-id && 'Preview updated. See link above.' || 'Click the link above to view the preview.' }}
#           edit-mode: replace
#           comment-id: ${{ steps.fc.outputs.comment-id }}

#   cleanup-preview:
#     if: github.event.action == 'closed'
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
#         with:
#           token: ${{ secrets.GTOKEN }}

#       - name: Delete PR Preview
#         env:
#           GITHUB_TOKEN: ${{ secrets.GTOKEN }}
#           PR_NUMBER: ${{ github.event.number }}
#         run: |
#           git config --global user.name 'github-actions[bot]'
#           git config --global user.email 'github-actions[bot]@users.noreply.github.com'
#           git push origin --delete gh-pages:pr-preview/$PR_NUMBER

#       - name: Find Comment
#         uses: peter-evans/find-comment@v2
#         id: fc
#         with:
#           issue-number: ${{ github.event.pull_request.number }}
#           comment-author: 'github-actions[bot]'
#           body-includes: Preview deployed to

#       - name: Update Comment
#         uses: peter-evans/create-or-update-comment@v3
#         if: steps.fc.outputs.comment-id
#         with:
#           comment-id: ${{ steps.fc.outputs.comment-id }}
#           body: |
#             ~~Preview deployed to: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-preview/${{ github.event.number }}/~~
            
#             Preview deleted as PR was closed.
#           edit-mode: replace

name: PR Preview Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-preview:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Get PR number and branch name
        run: |
          echo "PR_NUMBER=${{ github.event.number }}" >> $GITHUB_ENV
          echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF#refs/heads/} | sed 's/\//-/g')" >> $GITHUB_ENV

      - name: Update Vite config for PR preview
        run: |
          sed -i "s|base: '/'|base: '/pr-preview/${{ env.BRANCH_NAME }}/${{ env.PR_NUMBER }}/'|" vite.config.ts

      - name: Build project
        run: npm run build

      - name: Copy static files
        run: |
          mkdir -p dist/apps
          mkdir -p dist/assuta
          cp -R apps/* dist/apps/
          cp -R assuta/* dist/assuta/

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          preview: true

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Preview deployed to

      - name: Comment PR
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Preview deployed to: ${{ steps.deployment.outputs.page_url }}pr-preview/${{ env.BRANCH_NAME }}/${{ env.PR_NUMBER }}/
            
            ${{ steps.fc.outputs.comment-id && 'Preview updated. See link above.' || 'Click the link above to view the preview.' }}
          edit-mode: replace
          comment-id: ${{ steps.fc.outputs.comment-id }}

  cleanup-preview:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get branch name
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF#refs/heads/} | sed 's/\//-/g')" >> $GITHUB_ENV

      - name: Delete PR Preview
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.number }}
        run: |
          gh auth login --with-token <<< "$GITHUB_TOKEN"
          gh api -X DELETE /repos/${{ github.repository }}/pages/deployments/pr-preview/${{ env.BRANCH_NAME }}/$PR_NUMBER || echo "Deployment not found, skipping deletion"

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Preview deployed to

      - name: Update Comment
        uses: peter-evans/create-or-update-comment@v3
        if: steps.fc.outputs.comment-id
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: |
            ~~Preview deployed to: ${{ steps.deployment.outputs.page_url }}pr-preview/${{ env.BRANCH_NAME }}/${{ github.event.number }}/~~
            
            Preview deleted as PR was closed.
          edit-mode: replace